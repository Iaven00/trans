server:
  port: 8707

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8700/eureka/

spring:
  application:
    name: orderservice

  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092         #Kafka的消息中间件服务器
          zk-nodes: localhost:2181        #Zookeeper的节点，如果集群，后面加,号分隔
          auto-create-topics: true       #如果设置为false,就不会自动创建Topic 有可能你Topic还没创建就直接调用了。
          auto-add-partitions: true
      bindings:
        stream-demo:          #这里可以任意写，消费者应与之一致
          destination: custom-message-topic   #这里可以任意写，消费者应与之一致，消息发往的目的地
          content-type: application/json    #消息发送的格式，接收端不用指定格式，但是发送端要； 文本则为 text/plain
          producer:
            # 分区的数量（默认为1）
            partition-count: 3



  datasource:
    url: jdbc:mysql://8.130.83.55:3306/shipp?useUnicode=true&characterEncoding=utf-8&useSSL=false
#    url: jdbc:mysql://localhost:3306/shipp?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
#    password: 123456
    password: zlg%wares-manager%1006
    driver-class-name: com.mysql.jdbc.Driver
    dbcp2:
      min-idle: 5                                # 数据库连接池的最小维持连接数
      initial-size: 5                            # 初始化连接数
      max-total: 5                               # 最大连接数
      max-wait-millis: 150


# mybatis配置
mybatis:
  mapper-locations: classpath:com/iaven/mapper/*.xml    # mapper映射文件位置
  type-aliases-package: com.iaven.pojo.table    # 实体类所在的位置
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl   #用于控制台打印sql语句
    map-underscore-to-camel-case: true